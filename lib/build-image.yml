AWSTemplateFormatVersion: 2010-09-09
#Metadata:
Resources:
  BootstrapUser:
    Type: AWS::IAM::User
    Properties:
      Path: /
      Policies:
        - PolicyName: BoostrapUserBucketPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BuildBucketName}
                  - !Sub arn:aws:s3:::${BuildBucketName}/*
  BootstrapUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref BootstrapUser
  BuildVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: !Sub chic-vpc-${AWS::StackName}
  BuildSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.31.0.0/24
      Tags:
        - Key: Name
          Value: !Sub chic-subnet-${AWS::StackName}
      VpcId: !Ref BuildVPC
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for building Chic image
      VpcId: !Ref BuildVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub chic-security-group-${AWS::StackName}
  BuildInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      Tags:
        - Key: Name
          Value: !Sub chic-image-builder-${AWS::StackName}
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref BuildSubnet
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -x
            apt-get update
            apt-get install -y python-pip awscli
            pip install --upgrade pip
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cfn-init -v --resource BuildInstance --stack ${AWS::StackName} --region ${AWS::Region}
            cfn_init_result=$?
            export AWS_ACCESS_KEY_ID="${BootstrapUserAccessKey}"
            export AWS_SECRET_ACCESS_KEY="${BootstrapUserAccessKey.SecretAccessKey}"
            export AWS_DEFAULT_REGION="${AWS::Region}"
            aws s3 cp /var/log/cloud-init.log s3://${BuildBucketName}/log/
            aws s3 cp /var/log/cloud-init-output.log s3://${BuildBucketName}/log/
            aws s3 cp /var/log/cfn-init.log s3://${BuildBucketName}/log/
            cfn-signal -e $cfn_init_result --resource BuildInstance --stack ${AWS::StackName} --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        config:
          sources:
            "/": !Sub https://${BuildBucketName}.s3.amazonaws.com/bootstrap.tar.gz
          commands:
            01bootstrap:
              command:
                - !Ref BootstrapScriptPath
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          accessKeyId: !Ref BootstrapUserAccessKey
          secretKey: !GetAtt BootstrapUserAccessKey.SecretAccessKey
          buckets:
            - !Ref BuildBucketName
Parameters:
  BuildBucketName:
    Description: The name of the build bucket.
    Type: String
  InstanceType:
    Description: The instance type to use to build the image.
    Type: String
    Default: t2.small
  ImageId:
    Description: The AMI to use to build the image.
    Type: String
  BootstrapScriptPath:
    Description: The path to the script to run to bootstrap the image.
    Type: String
    Default: ""
Outputs:
  BuildInstanceId:
    Description: The instance ID of the build instance.
    Value: !Ref BuildInstance
