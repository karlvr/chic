AWSTemplateFormatVersion: 2010-09-09
#Metadata:
Resources:
  BootstrapRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: BoostrapUserBucketPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${BuildBucketName}
                  - !Sub arn:aws:s3:::${BuildBucketName}/*
        - PolicyName: BootstrapUserLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource:
                  - !Ref LogGroupArn
  BuildVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.31.0.0/16
      Tags:
        - Key: Name
          Value: !Sub chic-vpc-${AWS::StackName}
  BuildSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.31.0.0/24
      Tags:
        - Key: Name
          Value: !Sub chic-subnet-${AWS::StackName}
      VpcId: !Ref BuildVPC
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for building Chic image
      VpcId: !Ref BuildVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub chic-security-group-${AWS::StackName}
  BuildInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Sub chic-image-builder-${AWS::StackName}
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref BuildSubnet
      IamInstanceProfile: !Ref BootstrapRole
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -x
            apt-get update
            apt-get install -y python-pip awscli
            pip install --upgrade pip
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cfn-init -v --resource BuildInstance --stack ${AWS::StackName} --region ${AWS::Region} --configsets install
            cfn_init_result=$?
            aws s3 cp /var/log/cloud-init.log s3://${BuildBucketName}/log/
            aws s3 cp /var/log/cloud-init-output.log s3://${BuildBucketName}/log/
            aws s3 cp /var/log/cfn-init.log s3://${BuildBucketName}/log/
            cfn-signal -e $cfn_init_result --resource BuildInstance --stack ${AWS::StackName} --region ${AWS::Region}
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          install:
            - install_logs
            - install_bootstrap
            - tidy_logs
        install_logs:
          files:
            "/etc/awslogs/awslogs.conf":
              content:
              # https://s3.amazonaws.com/cloudformation-templates-us-east-1/CloudWatch_Logs.template
              # http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html
                !Sub |
                  [general]
                  state_file = /var/awslogs/state/agent-state

                  [/var/log/cloud-init.log]
                  file = /var/log/cloud-init.log
                  log_group_name = ${LogGroup}
                  log_stream_name = cloud-init.log
                  datetime_format =

                  [/var/log/cloud-init-output.log]
                  file = /var/log/cloud-init-output.log
                  log_group_name = ${LogGroup}
                  log_stream_name = cloud-init-output.log
                  datetime_format =

                  [/var/log/cfn-init.log]
                  file = /var/log/cfn-init.log
                  log_group_name = ${LogGroup}
                  log_stream_name = cfn-init.log
                  datetime_format =
              mode: 000644
              owner: root
              group: root
          packages:
            apt:
              curl: []
          commands:
            01awslogs:
              command:
                !Sub |
                  curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -o /tmp/awslogs-agent-setup.py
                  python /tmp/awslogs-agent-setup.py --region ${AWS::Region} --non-interactive --configfile /etc/awslogs/awslogs.conf
                  rm -f /tmp/awslogs-agent-setup.py
        tidy_logs:
          files:
            "/etc/awslogs/awslogs.conf":
              content:
                !Sub |
                  [general]
                  state_file = /var/awslogs/state/agent-state
              mode: 000644
              owner: root
              group: root
        install_bootstrap:
          sources:
            "/": !Sub https://${BuildBucketName}.s3.amazonaws.com/bootstrap.tar.gz
          commands:
            01bootstrap:
              command:
                - !Ref BootstrapScriptPath
      # AWS::CloudFormation::Authentication:
      #   S3AccessCreds:
      #     type: S3
      #     accessKeyId: !Ref BootstrapUserAccessKey
      #     secretKey: !GetAtt BootstrapUserAccessKey.SecretAccessKey
      #     buckets:
      #       - !Ref BuildBucketName
Parameters:
  BuildBucketName:
    Description: The name of the build bucket.
    Type: String
  InstanceType:
    Description: The instance type to use to build the image.
    Type: String
    Default: t2.small
  ImageId:
    Description: The AMI to use to build the image.
    Type: String
  KeyName:
    Description: The key name to use to start the instance
    Type: String
    Default: ""
  BootstrapScriptPath:
    Description: The path to the script to run to bootstrap the image.
    Type: String
    Default: ""
  LogGroup:
    Description: The log group name
    Type: String
  LogGroupArn:
    Description: The log group Arn
    Type: String
Outputs:
  BuildInstanceId:
    Description: The instance ID of the build instance.
    Value: !Ref BuildInstance
